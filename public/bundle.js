/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/json2md.ts":
/*!************************!*\
  !*** ./src/json2md.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"JSONtoMD\": () => (/* binding */ JSONtoMD)\n/* harmony export */ });\nfunction JSONtoMD(json) {\n    var res = \"\";\n    var js = JSON.parse(unescapeHtm(json)).blocks;\n    for (var i = 0; i < js.length; i++) {\n        var e = js[i];\n        if (e.type == \"table\") {\n            var c = e.data.content;\n            for (var j = 0; j < c.length; j++) {\n                res += \"|\";\n                res += c[j].join(\"|\");\n                res += \"|\\n\";\n                if (j == 0) {\n                    res += \"|\";\n                    for (var k = 0; k < c[j].length; k++) {\n                        res += \"---|\";\n                    }\n                    res += \"\\n\";\n                }\n            }\n        }\n    }\n    return res;\n}\nfunction unescapeHtm(src) {\n    var patterns = new Map([\n        ['&lt;', '<'],\n        ['&gt;', '>'],\n        ['&amp;', '&'],\n        ['&quot;', '\"'],\n        ['&#x27;', '\\''],\n        ['&#x60;', '`'],\n    ]);\n    return src.replace(/&(lt|gt|amp|quot|#x27|#x60);/g, function (match) {\n        var ret = patterns.get(match);\n        if (ret == undefined) {\n            return \"\";\n        }\n        return ret;\n    });\n}\n\n\n//# sourceURL=webpack://mdmml_js/./src/json2md.ts?");

/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _mdmml__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mdmml */ \"./src/mdmml.ts\");\n/* harmony import */ var _json2md__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./json2md */ \"./src/json2md.ts\");\n\n\nwindow.MDtoSMF = function (md) {\n    return (0,_mdmml__WEBPACK_IMPORTED_MODULE_0__.MDtoSMF)(md);\n};\nwindow.JSONtoMD = function (json) {\n    return (0,_json2md__WEBPACK_IMPORTED_MODULE_1__.JSONtoMD)(json);\n};\n\n\n//# sourceURL=webpack://mdmml_js/./src/main.ts?");

/***/ }),

/***/ "./src/mdmml.ts":
/*!**********************!*\
  !*** ./src/mdmml.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MDtoMML\": () => (/* binding */ MDtoMML),\n/* harmony export */   \"MDtoSMF\": () => (/* binding */ MDtoSMF),\n/* harmony export */   \"MMLtoSMF\": () => (/* binding */ MMLtoSMF),\n/* harmony export */   \"SMF\": () => (/* binding */ SMF),\n/* harmony export */   \"Uint8ArrayJoin\": () => (/* binding */ Uint8ArrayJoin),\n/* harmony export */   \"atoi\": () => (/* binding */ atoi),\n/* harmony export */   \"buildSMF\": () => (/* binding */ buildSMF),\n/* harmony export */   \"buildTempo\": () => (/* binding */ buildTempo),\n/* harmony export */   \"buildTitle\": () => (/* binding */ buildTitle),\n/* harmony export */   \"cc\": () => (/* binding */ cc),\n/* harmony export */   \"expand\": () => (/* binding */ expand),\n/* harmony export */   \"itob\": () => (/* binding */ itob),\n/* harmony export */   \"itofb\": () => (/* binding */ itofb),\n/* harmony export */   \"lenToTick\": () => (/* binding */ lenToTick),\n/* harmony export */   \"midiEvent\": () => (/* binding */ midiEvent),\n/* harmony export */   \"noteNum\": () => (/* binding */ noteNum),\n/* harmony export */   \"noteOnOff\": () => (/* binding */ noteOnOff),\n/* harmony export */   \"notesOnOff\": () => (/* binding */ notesOnOff),\n/* harmony export */   \"num\": () => (/* binding */ num),\n/* harmony export */   \"programChange\": () => (/* binding */ programChange),\n/* harmony export */   \"tempoMs\": () => (/* binding */ tempoMs),\n/* harmony export */   \"toEvents\": () => (/* binding */ toEvents)\n/* harmony export */ });\nvar MThd = new Uint8Array([0x4D, 0x54, 0x68, 0x64]);\nvar MTrk = new Uint8Array([0x4D, 0x54, 0x72, 0x6B]);\nvar EOT = new Uint8Array([0x00, 0xFF, 0x2F, 0x00]);\nvar MDMML = /** @class */ (function () {\n    function MDMML() {\n        this.divisions = 960;\n        this.title = \"\";\n        this.tempo = 120;\n        this.Tracks = [];\n        this.Conductor = new Track(\"\", [], new Uint8Array());\n        this.header = new Uint8Array();\n    }\n    return MDMML;\n}());\nvar Track = /** @class */ (function () {\n    function Track(name, mmls, smf) {\n        this.name = name;\n        this.mmls = mmls;\n        this.smf = smf;\n    }\n    return Track;\n}());\nfunction MDtoSMF(md) {\n    return SMF(MMLtoSMF(MDtoMML(md)));\n}\nfunction SMF(mm) {\n    var smf = Uint8ArrayJoin([mm.header, mm.Conductor.smf]);\n    for (var i = 0; i < mm.Tracks.length; i++) {\n        smf = Uint8ArrayJoin([smf, mm.Tracks[i].smf]);\n    }\n    return smf;\n}\nfunction MDtoMML(md) {\n    var mm = new MDMML;\n    var lines = md.split(\"\\n\");\n    for (var i = 0; i < lines.length; i++) {\n        if (lines[i] == \"---\") { // Front Matter\n            i++;\n            for (; i < lines.length; i++) {\n                if (lines[i] == \"---\") {\n                    break;\n                }\n                var items = lines[i].split(\":\");\n                if (items.length > 2) {\n                    items[1] = items.slice(1).join(\":\");\n                }\n                else if (items.length != 2) {\n                    continue;\n                }\n                if (items[0] == \"Divisions\") {\n                    mm.divisions = atoi(items[1], 960);\n                }\n                if (items[0] == \"Tempo\") {\n                    mm.tempo = atoi(items[1], 120);\n                }\n                if (items[0] == \"Title\") {\n                    mm.title = items[1].trim();\n                }\n            }\n        }\n        if (lines[i].startsWith(\"|\")) { // Table\n            i++;\n            i++; // Skip header\n            for (; i < lines.length; i++) {\n                if (lines[i].trim() == \"\") {\n                    break;\n                }\n                if (lines[i].startsWith(\";\")) { // Comment\n                    continue;\n                }\n                var items = lines[i].split(\"|\");\n                if (items.length < 3) {\n                    continue;\n                }\n                var name_1 = items[1].trim();\n                var mmls = [];\n                for (var ii = 2; ii < items.length; ii++) {\n                    mmls.push(items[ii].trim());\n                }\n                var found = false;\n                for (var j = 0; j < mm.Tracks.length; j++) {\n                    var v = mm.Tracks[j];\n                    if (v.name == name_1) {\n                        for (var k = 0; k < mmls.length; k++) {\n                            mm.Tracks[j].mmls.push(mmls[k]);\n                        }\n                        found = true;\n                        break;\n                    }\n                }\n                if (!found) {\n                    mm.Tracks.push(new Track(name_1, mmls, new Uint8Array()));\n                }\n            }\n        }\n    }\n    return mm;\n}\nfunction MMLtoSMF(mm) {\n    for (var i = 0; i < mm.Tracks.length; i++) {\n        var t = mm.Tracks[i];\n        var events = toEvents(expand(t.mmls.join(\"\")), i, mm.divisions);\n        mm.Tracks[i].smf = buildSMF(t.name, events, i);\n    }\n    mm.header = Uint8ArrayJoin([\n        MThd,\n        new Uint8Array([0x00, 0x00, 0x00, 0x06]),\n        new Uint8Array([0x00, 0x01]),\n        itofb(mm.Tracks.length + 1, 2),\n        itofb(mm.divisions, 2) // Divisions\n    ]);\n    var title = buildTitle(mm.title);\n    var tempo = buildTempo(mm.tempo);\n    var smf = Uint8ArrayJoin([\n        MTrk,\n        itofb(title.length + tempo.length + 12, 4),\n        title,\n        tempo,\n        new Uint8Array([0x00, 0xFF, 0x58, 0x04, 0x04, 0x02, 0x18, 0x08]),\n        EOT\n    ]);\n    mm.Conductor = new Track(\"Conductor\", [], smf);\n    return mm;\n}\nvar loop = /** @class */ (function () {\n    function loop(pos, count) {\n        this.pos = pos;\n        this.count = count;\n    }\n    return loop;\n}());\n// chode\nvar note = /** @class */ (function () {\n    function note(num, vel) {\n        this.num = num;\n        this.vel = vel;\n    }\n    return note;\n}());\nfunction expand(mml) {\n    var res = \"\";\n    var loops = [];\n    mml = mml.replace(/ /g, \"\");\n    mml += \"   \"; // インデックス超過対策\n    for (var i = 0; i < mml.length; i++) {\n        var s = mml[i];\n        if (s == \" \") {\n            break;\n        }\n        if (s == \"[\") { // loop begin\n            loops.push(new loop(i, -1));\n        }\n        else if (s == \"]\") { // loop end\n            var _a = num(mml.slice(i + 1), 1, 128), v = _a[0], l = _a[1];\n            var c = 2;\n            if (l > 0) {\n                i = i + l;\n                c = v;\n            }\n            var lp = loops.length - 1;\n            if (loops[lp].count == -1) {\n                loops[lp].count = c;\n            }\n            if (loops[lp].count > 1) {\n                loops[lp].count--;\n                i = loops[lp].pos;\n            }\n            else {\n                if (lp > 0) {\n                    loops = loops.slice(0, lp - 1);\n                }\n            }\n        }\n        else {\n            res += s;\n        }\n    }\n    return res;\n}\nfunction toEvents(mml, ch, div) {\n    var events = new Uint8Array;\n    var oct = 4;\n    var vel = 100;\n    var defTick = lenToTick(div, 8);\n    mml = mml.toLowerCase();\n    mml = mml.replace(/ /g, \"\");\n    mml = mml.replace(/#/g, \"+\");\n    mml += \"   \"; // インデックス超過対策\n    for (var i = 0; i < mml.length; i++) {\n        var s = mml[i];\n        if (s == \" \") {\n            break;\n        }\n        if ((s >= \"a\" && s <= \"g\") || (s == \"r\")) { // note\n            var tick = defTick;\n            if (mml[i + 1] == \"+\") {\n                i++;\n                s = s + \"+\";\n            }\n            else if (mml[i + 1] == \"-\") {\n                i++;\n                s = s + \"-\";\n            }\n            var _a = num(mml.slice(i + 1), 1, div), v = _a[0], l = _a[1];\n            if (l > 0) {\n                i = i + l;\n                tick = lenToTick(div, v);\n            }\n            if (mml[i + 1] == \".\") {\n                i++;\n                tick = Math.trunc(tick * 1.5);\n            }\n            for (;;) {\n                if (mml[i + 1] != \"^\") {\n                    break;\n                }\n                i++;\n                var tick2 = 0;\n                var _b = num(mml.slice(i + 1), 1, div), v_1 = _b[0], l_1 = _b[1];\n                if (l_1 > 0) {\n                    i = i + l_1;\n                    tick2 = lenToTick(div, v_1);\n                }\n                if (mml[i + 1] == \".\") {\n                    i++;\n                    tick2 = Math.trunc(tick * 1.5);\n                }\n                tick += tick2;\n            }\n            events = Uint8ArrayJoin([events, noteOnOff(ch, oct, s, vel, tick)]);\n        }\n        else if (s == \"{\") { // chode\n            var cp = mml.indexOf(\"}\", i + 1);\n            var cmml = mml.slice(i + 1, i + cp + 1) + \"   \";\n            i = i + cp + 1;\n            var notes = [];\n            var o = oct;\n            for (var j = 0; j < cmml.length; j++) {\n                var s_1 = cmml[j];\n                if (s_1 == \" \") {\n                    break;\n                }\n                if (cmml[j + 1] == \"+\") {\n                    j++;\n                    s_1 = s_1 + \"+\";\n                }\n                else if (cmml[j + 1] == \"-\") {\n                    j++;\n                    s_1 = s_1 + \"-\";\n                }\n                else if (s_1 == \">\") {\n                    o++;\n                    continue;\n                }\n                else if (s_1 == \"<\") {\n                    o--;\n                    continue;\n                }\n                var n = noteNum(o, s_1);\n                notes.push(new note(n, vel));\n            }\n            var tick = defTick;\n            var _c = num(mml.slice(i + 1), 1, div), v = _c[0], l = _c[1];\n            if (l > 0) {\n                i = i + l;\n                tick = lenToTick(div, v);\n            }\n            if (mml[i + 1] == \".\") {\n                i++;\n                tick = Math.trunc(tick * 1.5);\n            }\n            for (;;) {\n                if (mml[i + 1] != \"^\") {\n                    break;\n                }\n                i++;\n                var tick2 = 0;\n                var _d = num(mml.slice(i + 1), 1, div), v_2 = _d[0], l_2 = _d[1];\n                if (l_2 > 0) {\n                    i = i + l_2;\n                    tick2 = lenToTick(div, v_2);\n                }\n                if (mml[i + 1] == \".\") {\n                    i++;\n                    tick2 = Math.trunc(tick * 1.5);\n                }\n                tick += tick2;\n            }\n            events = Uint8ArrayJoin([events, notesOnOff(ch, notes, tick)]);\n        }\n        else if (s == \"o\") { // octave\n            var _e = num(mml.slice(i + 1), 1, 8), v = _e[0], l = _e[1];\n            if (l > 0) {\n                i = i + l;\n                oct = v;\n            }\n        }\n        else if (s == \">\") {\n            oct++;\n        }\n        else if (s == \"<\") {\n            oct--;\n        }\n        else if (s == \"l\") { // length\n            var _f = num(mml.slice(i + 1), 1, div), v = _f[0], l = _f[1];\n            if (l > 0) {\n                i = i + l;\n                defTick = lenToTick(div, v);\n            }\n        }\n        else if (s == \"@\") { // program\n            var _g = num(mml.slice(i + 1), 1, 128), v = _g[0], l = _g[1];\n            if (l > 0) {\n                i = i + l;\n            }\n            events = Uint8ArrayJoin([events, programChange(ch, v)]);\n        }\n        else if (s == \"p\") { // pan\n            var _h = num(mml.slice(i + 1), 0, 127), v = _h[0], l = _h[1];\n            if (l > 0) {\n                i = i + l;\n            }\n            events = Uint8ArrayJoin([events, cc(0, ch, 10, v)]);\n        }\n        else if (s == \"t\") { // tempo\n            var _j = num(mml.slice(i + 1), 1, 960), v = _j[0], l = _j[1];\n            if (l > 0) {\n                i = i + l;\n            }\n            events = Uint8ArrayJoin([events, buildTempo(v)]);\n        }\n        else if (s == \"v\") { // velocity\n            var _k = num(mml.slice(i + 1), 0, 127), v = _k[0], l = _k[1];\n            if (l > 0) {\n                i = i + l;\n                vel = v;\n            }\n        }\n        else if (s == \"$\") { // channel\n            var _l = num(mml.slice(i + 1), 1, 16), v = _l[0], l = _l[1];\n            if (l > 0) {\n                i = i + l;\n                ch = v - 1;\n            }\n        }\n    }\n    return events;\n}\nfunction buildSMF(title, events, ch) {\n    var body = Uint8ArrayJoin([\n        buildTitle(title),\n        new Uint8Array([0x00, 0xFF, 0x20, 0x01]),\n        itob(ch, 0),\n        new Uint8Array([0x00, 0xFF, 0x21, 0x01]),\n        itob(ch, 0),\n        cc(0, ch, 121, 0),\n        cc(0, ch, 7, 100),\n        events,\n        EOT\n    ]);\n    return Uint8ArrayJoin([\n        MTrk,\n        itofb(body.length, 4),\n        body\n    ]);\n}\nfunction num(s, min, max) {\n    var ss = \"\";\n    for (var i = 0; i < s.length; i++) {\n        var j = s[i];\n        if (j >= \"0\" && j <= \"9\") {\n            ss += j;\n        }\n        else {\n            break;\n        }\n    }\n    var n = Number(ss);\n    if (Number.isNaN(n)) {\n        return [0, 0];\n    }\n    if (n < min) {\n        n = min;\n    }\n    if (n > max) {\n        n = max;\n    }\n    return [n, ss.length];\n}\nfunction noteOnOff(ch, oct, note, vel, tick) {\n    if (note == \"r\") {\n        // 無音を再生\n        return Uint8ArrayJoin([\n            midiEvent(0, 0x90 + ch, 0, 0),\n            midiEvent(tick, 0x80 + ch, 0, 0) // off\n        ]);\n    }\n    var n = noteNum(oct, note);\n    return Uint8ArrayJoin([\n        midiEvent(0, 0x90 + ch, n, vel),\n        midiEvent(tick, 0x80 + ch, n, 0) // off\n    ]);\n}\nfunction notesOnOff(ch, notes, tick) {\n    var ret = new Uint8Array();\n    for (var i = 0; i < notes.length; i++) {\n        var n = notes[i];\n        ret = Uint8ArrayJoin([ret, midiEvent(0, 0x90 + ch, n.num, n.vel)]); // on\n    }\n    for (var i = 0; i < notes.length; i++) {\n        var n = notes[i];\n        if (i == 0) {\n            ret = Uint8ArrayJoin([ret, midiEvent(tick, 0x80 + ch, n.num, 0)]); // off\n        }\n        else {\n            ret = Uint8ArrayJoin([ret, midiEvent(0, 0x80 + ch, n.num, 0)]); // off\n        }\n    }\n    return ret;\n}\nfunction noteNum(oct, note) {\n    var cd = new Map([\n        [\"c-\", -1], [\"c\", 0], [\"c+\", 1],\n        [\"d-\", 1], [\"d\", 2], [\"d+\", 3],\n        [\"e-\", 3], [\"e\", 4], [\"e+\", 5],\n        [\"f-\", 4], [\"f\", 5], [\"f+\", 6],\n        [\"g-\", 6], [\"g\", 7], [\"g+\", 8],\n        [\"a-\", 8], [\"a\", 9], [\"a+\", 10],\n        [\"b-\", 10], [\"b\", 11], [\"b+\", 12],\n    ]);\n    if (note == \"r\") {\n        return -1;\n    }\n    var val = cd.get(note);\n    if (val == undefined) {\n        return 0;\n    }\n    return (oct + 1) * 12 + val;\n}\nfunction midiEvent(dt, ev, n, vel) {\n    return Uint8ArrayJoin([\n        itob(dt, 0),\n        itofb(ev, 1),\n        itofb(n, 1),\n        itofb(vel, 1)\n    ]);\n}\nfunction programChange(ch, p) {\n    return Uint8ArrayJoin([\n        cc(0, ch, 0, 0),\n        cc(0, ch, 32, 0),\n        new Uint8Array([0x00]),\n        itofb(0xC0 + ch, 1),\n        itob(p - 1, 0)\n    ]);\n}\nfunction cc(dt, ch, num, val) {\n    return Uint8ArrayJoin([\n        itob(dt, 0),\n        itofb(0xB0 + ch, 1),\n        itofb(num, 1),\n        itofb(val, 1)\n    ]);\n}\n// itob は number を f 桁の可変長バイナリにして返す\n// http://www13.plala.or.jp/kymats/study/MULTIMEDIA/midiStream_format.html\nfunction itob(i, f) {\n    if (i < 128) {\n        if (f < 1) {\n            f = 1;\n        }\n        var ret = new Uint8Array(f);\n        ret.set(new Uint8Array([i]), f - 1);\n        return ret;\n    }\n    if (i < 128 * 128) {\n        if (f < 2) {\n            f = 2;\n        }\n        var ret = new Uint8Array(f);\n        ret.set(new Uint8Array([i >> 7 | 0x80]), f - 2);\n        ret.set(new Uint8Array([i & 0x7f]), f - 1);\n        return ret;\n    }\n    if (i < 128 * 128 * 128) {\n        if (f < 3) {\n            f = 3;\n        }\n        var ret = new Uint8Array(f);\n        ret.set(new Uint8Array([i >> 14 | 0x80]), f - 3);\n        ret.set(new Uint8Array([i >> 7 | 0x80]), f - 2);\n        ret.set(new Uint8Array([i & 0x7f]), f - 1);\n        return ret;\n    }\n    if (i < 128 * 128 * 128 * 128) {\n        if (f < 4) {\n            f = 4;\n        }\n        var ret = new Uint8Array(f);\n        ret.set(new Uint8Array([i >> 21 | 0x80]), f - 4);\n        ret.set(new Uint8Array([i >> 14 | 0x80]), f - 3);\n        ret.set(new Uint8Array([i >> 7 | 0x80]), f - 2);\n        ret.set(new Uint8Array([i & 0x7f]), f - 1);\n        return ret;\n    }\n    return new Uint8Array();\n}\n// itofb は number を f 桁の固定長バイナリにして返す\nfunction itofb(i, f) {\n    if (i < 256) {\n        if (f < 1) {\n            f = 1;\n        }\n        var ret = new Uint8Array(f);\n        ret.set(new Uint8Array([i]), f - 1);\n        return ret;\n    }\n    if (i < 256 * 256) {\n        if (f < 2) {\n            f = 2;\n        }\n        var ret = new Uint8Array(f);\n        ret.set(new Uint8Array([i >> 8]), f - 2);\n        ret.set(new Uint8Array([i & 0xff]), f - 1);\n        return ret;\n    }\n    if (i < 256 * 256 * 256) {\n        if (f < 3) {\n            f = 3;\n        }\n        var ret = new Uint8Array(f);\n        ret.set(new Uint8Array([i >> 16]), f - 3);\n        ret.set(new Uint8Array([i >> 8]), f - 2);\n        ret.set(new Uint8Array([i & 0xff]), f - 1);\n        return ret;\n    }\n    if (i < 256 * 256 * 256 * 256) {\n        if (f < 4) {\n            f = 4;\n        }\n        var ret = new Uint8Array(f);\n        ret.set(new Uint8Array([i >> 24]), f - 4);\n        ret.set(new Uint8Array([i >> 16]), f - 3);\n        ret.set(new Uint8Array([i >> 8]), f - 2);\n        ret.set(new Uint8Array([i & 0xff]), f - 1);\n        return ret;\n    }\n    return new Uint8Array();\n}\nfunction lenToTick(div, len) {\n    return Math.trunc(div * 4 / len);\n}\nfunction tempoMs(t) {\n    if (t == 0) {\n        return 0;\n    }\n    return Math.trunc(60 * 1000 * 1000 / t);\n}\nfunction atoi(a, def) {\n    var ret = Number(a);\n    if (Number.isNaN(ret)) {\n        return def;\n    }\n    return ret;\n}\nfunction buildTitle(title) {\n    return Uint8ArrayJoin([\n        new Uint8Array([0x00, 0xff, 0x03]),\n        itofb(title.length, 1),\n        new TextEncoder().encode(title)\n    ]);\n}\nfunction buildTempo(tempo) {\n    return Uint8ArrayJoin([\n        new Uint8Array([0x00, 0xff, 0x51, 0x03]),\n        itofb(tempoMs(tempo), 3)\n    ]);\n}\nfunction Uint8ArrayJoin(src) {\n    var len = 0;\n    for (var i = 0; i < src.length; i++) {\n        len += src[i].length;\n    }\n    var dest = new Uint8Array(len);\n    var pos = 0;\n    for (var i = 0; i < src.length; i++) {\n        dest.set(new Uint8Array(src[i]), pos);\n        pos += src[i].length;\n    }\n    return dest;\n}\n// for Test\n\n\n\n//# sourceURL=webpack://mdmml_js/./src/mdmml.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.ts");
/******/ 	
/******/ })()
;